<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zksy.reservationsystem.dao.StudentDao">
    <insert id="insertStudent">
        insert
        student(`name`, student_id, class_name, gender, contact, parent_contact, dormitory) values (
        #{name},
        #{studentId},
        #{className},
        #{gender},
        #{contact},
        #{parentContact},
        #{dormitory}
        )
    </insert>

    <update id="deleteStudent">
        update student
        set is_deleted = 1
        where student_id = #{studentId}
    </update>

    <update id="updateStudentPo">
        update student
        set `name`         = #{name},
            class_name     = #{className},
            contact        = #{contact},
            parent_contact = #{parentContact},
            dormitory      = #{dormitory},
            gender         = #{gender},
            is_deleted     = #{isDeleted}
        where student_id = #{studentId}
    </update>

    <select id="queryStudentDtoByStudentId" resultMap="studentDtoMap">
        select s.id,
               `name`,
               student_id,
               class_name,
               gender,
               contact,
               parent_contact,
               dormitory,
               is_bound
        from student s
                 join stu_auth sa on s.student_id = sa.uname
        where student_id = #{studentId}
          and s.is_deleted = 0
    </select>

    <select id="queryStudentPoByStudentId" resultMap="studentPoMap">
        select id,
               `name`,
               student_id,
               class_name,
               gender,
               contact,
               parent_contact,
               dormitory,
               is_deleted
        from student
        where student_id = #{studentId}
          and is_deleted = 0
    </select>

    <select id="queryStudentDtoList" resultMap="studentDtoMap">
        select id, `name`, student_id, class_name, gender, contact, parent_contact, dormitory
        from student
        <where>
            is_deleted = 0
            <if test="name != null and name != ''">
                and `name` like concat('%', #{name}, '%')
            </if>
            <if test="studentId != null and studentId != ''">
                and student_id like concat('%', #{studentId}, '%')
            </if>
            <if test="className != null and className != ''">
                and class_name like concat('%', #{className}, '%')
            </if>
            <if test="dormitory != null and dormitory != ''">
                and dormitory like concat('%', #{dormitory}, '%')
            </if>
        </where>
    </select>

    <select id="queryStudentPoWithDeleted" resultMap="studentPoMap">
        select id,
               `name`,
               student_id,
               class_name,
               gender,
               contact,
               parent_contact,
               dormitory,
               is_deleted
        from student
        where student_id = #{studentId}
    </select>

    <resultMap id="studentPoMap" type="com.zksy.reservationsystem.domain.po.StudentPo">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="studentId" column="student_id"/>
        <result property="contact" column="contact"/>
        <result property="gender" column="gender"/>
        <result property="contact" column="contact"/>
        <result property="parentContact" column="parent_contact"/>
        <result property="dormitory" column="dormitory"/>
        <result property="className" column="class_name"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <resultMap id="studentDtoMap" type="com.zksy.reservationsystem.domain.dto.StudentDto">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="studentId" column="student_id"/>
        <result property="contact" column="contact"/>
        <result property="gender" column="gender"/>
        <result property="contact" column="contact"/>
        <result property="parentContact" column="parent_contact"/>
        <result property="dormitory" column="dormitory"/>
        <result property="className" column="class_name"/>
        <result property="isBound" column="is_bound"/>
    </resultMap>
</mapper>
