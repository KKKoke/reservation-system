<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zksy.reservationsystem.dao.ReserveRecordDao">
    <insert id="insertReserveRecord">
        insert
        reserve_record (student_id, job_id, reserve_type, comment, start_time, end_time, period_id) values (
        #{reserveRecordVo.studentId},
        #{reserveRecordVo.jobId},
        #{reserveRecordVo.reserveType},
        #{reserveRecordVo.comment},
        #{startTime},
        #{endTime},
        #{periodId}
        )
    </insert>

    <update id="deleteReserveRecord">
        update reserve_record
        set is_deleted = 1
        where id = #{recordId}
    </update>

    <update id="updateStatus">
        update reserve_record
        set status = #{status}
        where id = #{recordId}
    </update>

    <update id="updateRejectReason">
        update reserve_record
        set reject_reason = #{reason}
        where id = #{recordId}
    </update>

    <update id="updateStuFeedback">
        update reserve_record
        set stu_feedback = #{stuFeedback}
        where id = #{recordId}
    </update>

    <update id="updateTeaFeedback">
        update reserve_record
        set tea_feedback = #{teaFeedback}
        where id = #{recordId}
    </update>

    <select id="queryReserveRecordPoListByJobId" resultMap="reserveRecordPoMap">
        select id,
               student_id,
               job_id,
               reserve_type,
               comment,
               create_time,
               start_time,
               end_time,
               stu_feedback,
               tea_feedback,
               status,
               reject_reason,
               is_deleted,
               period_id
        from reserve_record
        where job_id = #{jobId}
          and is_deleted = 0
        order by start_time desc
    </select>

    <select id="queryReserveRecordPoListByStudentId" resultMap="reserveRecordPoMap">
        select id,
               student_id,
               job_id,
               reserve_type,
               comment,
               create_time,
               start_time,
               end_time,
               stu_feedback,
               tea_feedback,
               status,
               reject_reason,
               is_deleted,
               period_id
        from reserve_record
        where student_id = #{studentId}
          and is_deleted = 0
        order by start_time desc
    </select>

    <select id="queryReserveRecordPoByRecordId" resultMap="reserveRecordPoMap">
        select id,
               student_id,
               job_id,
               reserve_type,
               comment,
               create_time,
               start_time,
               end_time,
               stu_feedback,
               tea_feedback,
               status,
               reject_reason,
               is_deleted,
               period_id
        from reserve_record
        where id = #{recordId}
          and is_deleted = 0
    </select>

    <select id="queryEndedReserveRecordPoListByJobId" resultMap="reserveRecordPoMap">
        select id,
               student_id,
               job_id,
               reserve_type,
               comment,
               create_time,
               start_time,
               end_time,
               stu_feedback,
               tea_feedback,
               status,
               reject_reason,
               is_deleted,
               period_id
        from reserve_record
        where job_id = #{jobId}
          and is_deleted = 0
          and status = 4
        order by start_time desc
    </select>

    <select id="queryAllReserveRecordPo" resultMap="reserveRecordPoMap">
        select rr.id,
        rr.student_id,
        rr.job_id,
        rr.reserve_type,
        rr.comment,
        rr.create_time,
        rr.start_time,
        rr.end_time,
        rr.stu_feedback,
        rr.tea_feedback,
        rr.status,
        rr.reject_reason,
        rr.is_deleted,
        rr.period_id
        from reserve_record rr
            join teacher t on rr.job_id = t.job_id
            join student s on rr.student_id = s.student_id
        <where>
            rr.is_deleted = 0
            <if test="recordSearchVo.studentId != null and recordSearchVo.studentId != ''">
                and rr.student_id like concat('%', #{recordSearchVo.studentId}, '%')
            </if>
            <if test="recordSearchVo.stuName != null and recordSearchVo.stuName != ''">
                and s.name like concat('%', #{recordSearchVo.stuName}, '%')
            </if>
            <if test="recordSearchVo.jobId != null and recordSearchVo.jobId != ''">
                and rr.job_id like concat('%', #{recordSearchVo.jobId}, '%')
            </if>
            <if test="recordSearchVo.teaName != null and recordSearchVo.teaName != ''">
                and t.name like concat('%', #{recordSearchVo.teaName}, '%')
            </if>
            <if test="recordSearchVo.reserveType != null and recordSearchVo.reserveType != ''">
                and rr.reserve_type like concat('%', #{recordSearchVo.reserveType}, '%')
            </if>
            <if test="recordSearchVo.startTime != null and recordSearchVo.startTime!= ''">
                and date_format(rr.create_time,'%y%m%d') &gt;= date_format(#{recordSearchVo.startTime},'%y%m%d')
            </if>
            <if test="recordSearchVo.endTime != null and recordSearchVo.endTime!= ''">
                and date_format(rr.create_time,'%y%m%d') &lt;= date_format(#{recordSearchVo.endTime},'%y%m%d')
            </if>
            <if test="recordSearchVo.status != null">
                and rr.status = #{recordSearchVo.status}
            </if>
        </where>
        order by rr.start_time desc
    </select>

    <resultMap id="reserveRecordPoMap" type="com.zksy.reservationsystem.domain.po.ReserveRecordPo">
        <id property="id" column="id"/>
        <result property="studentId" column="student_id"/>
        <result property="jobId" column="job_id"/>
        <result property="reserveType" column="reserve_type"/>
        <result property="comment" column="comment"/>
        <result property="createTime" column="create_time"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="stuFeedback" column="stu_feedback"/>
        <result property="teaFeedback" column="tea_feedback"/>
        <result property="status" column="status"/>
        <result property="rejectReason" column="reject_reason"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="periodId" column="period_id"/>
    </resultMap>
</mapper>
